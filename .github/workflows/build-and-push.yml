name: Build and Deploy
on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          build-args: |
            VERSION=${{ github.sha }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
  deploy:
    name: Deploy to Server
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy docker-compose.yml to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.DEPLOY_SERVER_USERNAME }}/go-demo-app"

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_KEY }}
          passphrase: ${{ secrets.DEPLOY_SERVER_KEY_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_SERVER_SSH_PORT }}
          script: |
            # Navigate to app directory
            cd /home/${{ secrets.DEPLOY_SERVER_USERNAME }}/go-demo-app

            # Create logs directory if it doesn't exist
            mkdir -p logs

            # Export variables for docker-compose
            export DOCKERHUB_USERNAME=${{ vars.DOCKERHUB_USERNAME }}

            # Pull the latest image
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

            # Stop and start the containers
            docker-compose down
            docker-compose up -d

            # Verify deployment
            docker ps

            # Show logs to verify startup
            docker-compose logs --tail=20 app